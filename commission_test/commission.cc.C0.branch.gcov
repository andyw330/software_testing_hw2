        -:    0:Source:../commission/commission.cc
        -:    0:Graph:commission.gcno
        -:    0:Data:commission.gcda
        -:    0:Runs:9
        -:    0:Programs:1
        -:    1:#include "commission.h"
        -:    2:#include <stdio.h>
        -:    3:#include <stdlib.h>
        -:    4:
        -:    5:// Returns commission.
function _Z10commissioniii called 11 returned 27% blocks executed 84%
        -:    6:double commission(int locks, int stocks, int barrels) {
       11:    7:  if (locks == -1) {
branch  0 taken 9%
branch  1 taken 91%
        1:    8:    fprintf(stderr, "Program terminates");
        1:    9:    exit(0);
        -:   10:  }
        -:   11:
       26:   12:  int locks_out_range = (locks < 1 || locks > 70);
branch  0 taken 60%
branch  1 taken 40%
       26:   13:  int stocks_out_range = (stocks < 1 || stocks > 80);
branch  0 taken 60%
branch  1 taken 40%
       26:   14:  int barrels_out_range = (barrels < 1 || barrels > 90);
branch  0 taken 60%
branch  1 taken 40%
        -:   15:
       16:   16:  if (locks_out_range && !stocks_out_range && !barrels_out_range) {
branch  0 taken 40%
branch  1 taken 60%
branch  2 taken 50%
branch  3 taken 50%
branch  4 taken 50%
branch  5 taken 50%
        1:   17:    fprintf(stderr, "Value of locks not in the range");
        1:   18:    exit(1);
       17:   19:  } else if (!locks_out_range && stocks_out_range && !barrels_out_range) {
branch  0 taken 67%
branch  1 taken 33%
branch  2 taken 33%
branch  3 taken 67%
branch  4 taken 50%
branch  5 taken 50%
        1:   20:    fprintf(stderr, "Value of stocks not in the range");
        1:   21:    exit(1);
       17:   22:  } else if (!locks_out_range && !stocks_out_range && barrels_out_range) {
branch  0 taken 63%
branch  1 taken 38%
branch  2 taken 80%
branch  3 taken 20%
branch  4 taken 25%
branch  5 taken 75%
        1:   23:    fprintf(stderr, "Value of barrels not in the range");
        1:   24:    exit(1);
       12:   25:  } else if (locks_out_range && stocks_out_range && !barrels_out_range) {
branch  0 taken 43%
branch  1 taken 57%
branch  2 taken 67%
branch  3 taken 33%
branch  4 taken 50%
branch  5 taken 50%
        1:   26:    fprintf(stderr, "Value of locks and stocks not in the range");
        1:   27:    exit(1);
        9:   28:  } else if (locks_out_range && !stocks_out_range && barrels_out_range) {
branch  0 taken 33%
branch  1 taken 67%
branch  2 taken 50%
branch  3 taken 50%
branch  4 taken 100%
branch  5 taken 0%
        1:   29:    fprintf(stderr, "Value of locks and barrels not in the range");
        1:   30:    exit(1);
       10:   31:  } else if (!locks_out_range && stocks_out_range && barrels_out_range) {
branch  0 taken 80%
branch  1 taken 20%
branch  2 taken 25%
branch  3 taken 75%
branch  4 taken 100%
branch  5 taken 0%
        1:   32:    fprintf(stderr, "Value of stocks and barrels not in the range");
        1:   33:    exit(1);
        6:   34:  } else if (locks_out_range && stocks_out_range && barrels_out_range) {
branch  0 taken 25%
branch  1 taken 75%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
        1:   35:    fprintf(stderr, "Value of locks and stocks and barrels not in the range");
        1:   36:    exit(1);
        -:   37:  }
        -:   38:
        3:   39:  double sales = locks * 45.0 + stocks * 30.0 + barrels * 25.0;
        -:   40:  double commission;
        3:   41:  if (sales > 1800.0) {
branch  0 taken 33%
branch  1 taken 67%
        1:   42:    commission = 0.10 * 1000.0;
        1:   43:    commission = commission + 0.15 * 800.0;
        1:   44:    commission = commission + 0.2 * (sales - 1800.0);
        3:   45:  } else if (sales > 1000.0) {
branch  0 taken 50%
branch  1 taken 50%
        1:   46:    commission = 0.10 * 1000.0;
        1:   47:    commission = commission + 0.15 * (sales - 1000.0);
        1:   48:  } else
        1:   49:    commission = 0.10 * sales;
        -:   50:
        3:   51:  return commission;
        -:   52:}
