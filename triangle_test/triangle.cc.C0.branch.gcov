        -:    0:Source:../triangle/triangle.cc
        -:    0:Graph:triangle.gcno
        -:    0:Data:triangle.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "triangle.h"
        -:    2:
        -:    3:// Returns triangle type. (upper bound 200)
function _Z8triangleiii called 11 returned 100% blocks executed 100%
        -:    4:const char* triangle(int a, int b, int c) {
       29:    5:  int a_out_range = (a < 1 || a > 200);
branch  0 taken 64%
branch  1 taken 36%
       29:    6:  int b_out_range = (b < 1 || b > 200);
branch  0 taken 64%
branch  1 taken 36%
       29:    7:  int c_out_range = (c < 1 || c > 200);
branch  0 taken 64%
branch  1 taken 36%
        -:    8:
       17:    9:  if (a_out_range && !b_out_range && !c_out_range)
branch  0 taken 36%
branch  1 taken 64%
branch  2 taken 50%
branch  3 taken 50%
branch  4 taken 50%
branch  5 taken 50%
        1:   10:    return "Value of a is not in the range of permitted values";
       19:   11:  else if (!a_out_range && b_out_range && !c_out_range)
branch  0 taken 70%
branch  1 taken 30%
branch  2 taken 29%
branch  3 taken 71%
branch  4 taken 50%
branch  5 taken 50%
        1:   12:    return "Value of b is not in the range of permitted values";
       20:   13:  else if (!a_out_range && !b_out_range && c_out_range)
branch  0 taken 67%
branch  1 taken 33%
branch  2 taken 83%
branch  3 taken 17%
branch  4 taken 20%
branch  5 taken 80%
        1:   14:    return "Value of c is not in the range of permitted values";
       13:   15:  else if (a_out_range && b_out_range && !c_out_range)
branch  0 taken 38%
branch  1 taken 63%
branch  2 taken 67%
branch  3 taken 33%
branch  4 taken 50%
branch  5 taken 50%
        1:   16:    return "Value of a,b is not in the range of permitted values";
       10:   17:  else if (a_out_range && !b_out_range && c_out_range)
branch  0 taken 29%
branch  1 taken 71%
branch  2 taken 50%
branch  3 taken 50%
branch  4 taken 100%
branch  5 taken 0%
        1:   18:    return "Value of a,c is not in the range of permitted values";
       12:   19:  else if (!a_out_range && b_out_range && c_out_range)
branch  0 taken 83%
branch  1 taken 17%
branch  2 taken 20%
branch  3 taken 80%
branch  4 taken 100%
branch  5 taken 0%
        1:   20:    return "Value of b,c is not in the range of permitted values";
        7:   21:  else if (a_out_range && b_out_range && c_out_range)
branch  0 taken 20%
branch  1 taken 80%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
        1:   22:    return "Value of a,b,c is not in the range of permitted values";
        -:   23:
       10:   24:  if (a + b <= c || b + c <= a || c + a <= b) {
branch  0 taken 75%
branch  1 taken 25%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 100%
        1:   25:    return "NotATriangle";
        -:   26:  }
        -:   27:
        5:   28:  if (a == b && b == c)
branch  0 taken 67%
branch  1 taken 33%
branch  2 taken 50%
branch  3 taken 50%
        1:   29:    return "Equilateral";
        4:   30:  else if (a != b && a != c && b != c)
branch  0 taken 50%
branch  1 taken 50%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
        1:   31:    return "Scalene";
        -:   32:  else
        1:   33:    return "Isosceles";
       11:   34:}
