        -:    0:Source:../triangle/triangle.cc
        -:    0:Graph:triangle.gcno
        -:    0:Data:triangle.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "triangle.h"
        -:    2:
        -:    3:// Returns triangle type. (upper bound 200)
function _Z8triangleiii called 8 returned 100% blocks executed 68%
        -:    4:const char* triangle(int a, int b, int c) {
       24:    5:  int a_out_range = (a < 1 || a > 200);
branch  0 taken 100%
branch  1 taken 0%
       24:    6:  int b_out_range = (b < 1 || b > 200);
branch  0 taken 100%
branch  1 taken 0%
       24:    7:  int c_out_range = (c < 1 || c > 200);
branch  0 taken 100%
branch  1 taken 0%
        -:    8:
        8:    9:  if (a_out_range && !b_out_range && !c_out_range)
branch  0 taken 0%
branch  1 taken 100%
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:   10:    return "Value of a is not in the range of permitted values";
       16:   11:  else if (!a_out_range && b_out_range && !c_out_range)
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 100%
branch  4 never executed
branch  5 never executed
    #####:   12:    return "Value of b is not in the range of permitted values";
       24:   13:  else if (!a_out_range && !b_out_range && c_out_range)
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 100%
    #####:   14:    return "Value of c is not in the range of permitted values";
        8:   15:  else if (a_out_range && b_out_range && !c_out_range)
branch  0 taken 0%
branch  1 taken 100%
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:   16:    return "Value of a,b is not in the range of permitted values";
        8:   17:  else if (a_out_range && !b_out_range && c_out_range)
branch  0 taken 0%
branch  1 taken 100%
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:   18:    return "Value of a,c is not in the range of permitted values";
       16:   19:  else if (!a_out_range && b_out_range && c_out_range)
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 100%
branch  4 never executed
branch  5 never executed
    #####:   20:    return "Value of b,c is not in the range of permitted values";
        8:   21:  else if (a_out_range && b_out_range && c_out_range)
branch  0 taken 0%
branch  1 taken 100%
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:   22:    return "Value of a,b,c is not in the range of permitted values";
        -:   23:
       21:   24:  if (a + b <= c || b + c <= a || c + a <= b) {
branch  0 taken 88%
branch  1 taken 13%
branch  2 taken 86%
branch  3 taken 14%
branch  4 taken 17%
branch  5 taken 83%
        3:   25:    return "NotATriangle";
        -:   26:  }
        -:   27:
        7:   28:  if (a == b && b == c)
branch  0 taken 40%
branch  1 taken 60%
branch  2 taken 50%
branch  3 taken 50%
        1:   29:    return "Equilateral";
        9:   30:  else if (a != b && a != c && b != c)
branch  0 taken 75%
branch  1 taken 25%
branch  2 taken 67%
branch  3 taken 33%
branch  4 taken 50%
branch  5 taken 50%
        1:   31:    return "Scalene";
        -:   32:  else
        3:   33:    return "Isosceles";
        8:   34:}
